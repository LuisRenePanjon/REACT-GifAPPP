{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","events","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","result","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFechGifs","gif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,cAAqB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAe/C,OAEI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAqBO,OAC9CN,EAAe,MAMnB,SACI,uBACIO,KAAK,OACLC,YAAY,wBACZC,MAAQV,EACRW,SAnBc,SAAEC,GACxBX,EAAeW,EAAOC,OAAOH,a,QCJxBI,EAAc,SAAC,GAAsB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAQC,EAAS,EAATA,IACrC,OACI,sBAAKC,UAAU,yCAAf,UACI,4BAAKF,IACL,qBAAKG,IAAMF,EAAKG,IAAMJ,Q,uBCNrBK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGEG,MAAOR,GAHT,cAGbS,EAHa,gBAIIA,EAAOC,OAJX,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCMPK,EAAU,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAAgB,ECHhB,SAAC,GAAoB,IAAjBA,EAAgB,EAAhBA,SAAgB,EAEjBvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAJ8B,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAiB3C,OAVAC,qBAAU,WACNjB,EAASC,GACJiB,MAAM,SAAAV,GACHQ,EAAS,CACLT,KAAMC,EACNM,SAAS,SAGtB,CAAEb,IAEEc,EDJyBI,CAAa,CAAElB,aAAjCO,EAVyB,EAU/BD,KAAYO,EAVmB,EAUnBA,QAEpB,OACA,qCACI,oBAAIjB,UAAU,yCAAd,SAAyDI,IACvDa,GAAW,2CACb,qBAAKjB,UAAU,YAAf,SAEQW,EAAKC,KAAI,SAAAW,GACL,OACI,cAAC,EAAD,eAESA,GADGA,EAAI1B,aEMzB2B,EA7BM,WAAM,IAAD,EAEc3C,mBAAU,CAAE,WAF1B,mBAEfQ,EAFe,KAEHT,EAFG,KAQtB,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAkBA,IAEtB,uBACA,6BAEQS,EAAWuB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADPA,Y,MClBlCqB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cdf59fc1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const AddCategory = ( {setCategories } ) => {\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = ( events ) => {\n        setInputValue( events.target.value );\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if ( inputValue.trim().length > 2){\n            setCategories( categories => [inputValue , ...categories]);\n            setInputValue( '' );\n        }\n    };\n\n    return (\n        \n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\" \n                placeholder=\"Ingrese una categoria\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n","import React from 'react'\n\nexport const GifGridItem = ({id, title , url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <p>{ title }</p>\n            <img src= {url} alt={ title }/>\n        </div>\n    )\n}\n","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=vf02ffXOXAfibE1dIl4m1EARTouk6fwo`;\n    const result = await fetch( url );\n    const { data } = await result.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    } );\n\n    return gifs;\n};","// import React, { useState, useEffect } from 'react'\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nimport { useFechGifs } from \"../hooks/useFetchGifs\"\n\nexport const GifGrid = ( { category } ) => {\n    \n\n    // const [images, setImages] = useState([]);\n\n    // useEffect(() => {\n    //     getGifs( category)\n    //         .then( setImages);\n    // }, [ category ]);\n    \n    const { data: gifs, loading } = useFechGifs( { category } );\n\n    return (\n    <>\n        <h3 className=\"card animate__animated animate__fadeIn\">{ category }</h3>\n        { loading && <p>Loading!!!</p> }\n        <div className=\"card-grid\">\n            {\n                gifs.map(gif => {\n                    return (\n                        <GifGridItem \n                            key = { gif.id }\n                            { ...gif }\n                        />\n                    );\n                })\n            }\n        </div>\n    </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFechGifs = ( { category } ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( category )\n            .then( gifs => {\n                setState({\n                    data: gifs,\n                    loading: false \n                });\n            });\n    }, [ category ]);\n\n    return state;\n};\n","import { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nconst GifExpertApp = () =>{\n\n    const [categories, setCategories] = useState( [ 'Naruto' ]);\n    // const handleAdd = () => {\n    //     setCategories([...categories, 'Boku no hero']);\n    // };\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory \n                setCategories = { setCategories }\n            />\n            <hr />\n            <ol>\n                { \n                    categories.map( category  => (\n                        <GifGrid \n                            key={ category }\n                            category = { category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n};\n\nexport default GifExpertApp;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}